server {
    listen 81; #端口
    listen 444 ssl; #ssl端口
    ssl on;
    server_name youdomain.com; #域名

    ssl_certificate /www/cert/youdomain.com_bundle.pem; #ssl证书文件
    ssl_certificate_key /www/cert/youdomain.com.key; #ssl证书文件
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    #上面的根据需求修改
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #这里不用v1增加了v1.3
    ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

    location / {
        #proxy_pass http:127.0.0.1:81;
        root   /www/youprojectpath;
        try_files $uri $uri/ @router;
        index  index.html index.htm;
        error_page 405 =200 http://$host$request_uri;
    }

    # 压缩chunk-vendors.js,加快首次加载速度
    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    # 代理后端接口
    location /api/ {
        # host 修改为真实的域名和端口
        proxy_set_header Host $http_host;
        # 客户端真实ip
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 客户端真实协议(http/https)
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:5566;   # 转发请求的地址
        rewrite ^/api/(.*)$ /$1 break;
    }

    location /hubs/ {
        # host 修改为真实的域名和端口
        proxy_set_header Host $http_host;
        # 客户端真实ip
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 客户端真实协议(http/https)
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:5566;   # 转发请求的地址
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location @router {
        rewrite ^.*$ /index.html last;
    }

    error_page 500 502 503 504  /50x.html;
    error_page 497 301 https://$http_host$request_uri; #这个我也不知道原理 反正能跳转到https

    location = /50x.html {
        root   html;
    }

}